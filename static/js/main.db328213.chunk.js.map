{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","api.ts","components/ErrorNotification/ErrorNotification.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","context/index.tsx","components/Person/Person.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","label","className","isActive","classNames","Navbar","role","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorNotification","message","Loader","PersonLink","person","name","sex","slug","PeopleContext","createContext","PersonItem","born","died","fatherName","motherName","people","useContext","useParams","personSlug","findParents","useCallback","findedName","parent","find","PeopleTable","map","title","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","isPeopleLoading","setIsPeopleLoading","useEffect","getPeopleAsync","receivedPeople","length","Provider","value","PageNotFound","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"oQASaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAmBC,IAC5B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GARuC,ECN/BI,EAAmB,kBAC9B,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAC1B,cAAC,EAAD,CAAaD,GAAG,SAASC,MAAM,iBAVP,ECDnBM,EAAqB,kBAChC,oBAAIL,UAAU,QAAd,sBADgC,E,sBCO3B,SAASM,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MARA,oEAQN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,CCPM,IAAMQ,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChD,mCACe,yBAAZA,EACC,mBAAG,UAAQ,qBAAqBhB,UAAU,kBAA1C,SACIgB,IAGJ,mBAAG,UAAQ,kBAAX,SACIA,KARwC,ECHrCC,G,MAAmB,kBAC9B,qBAAKjB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFa,GCMnBkB,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACExB,GAAE,kBAAawB,GACftB,UAAWE,IAAW,CAAE,kBAA2B,MAARmB,IAF7C,SAIGD,GAGN,ECjBYG,EAAgBC,wBAAwB,ICQxCC,EAA8B,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAE1CE,EAMEF,EANFE,IACAK,EAKEP,EALFO,KACAC,EAIER,EAJFQ,KACAC,EAGET,EAHFS,WACAC,EAEEV,EAFFU,WACAP,EACEH,EADFG,KAGIQ,EAASC,qBAAWR,GAC1B,EAA4BS,cAApBC,kBAAR,MAAqB,GAArB,EAEMC,EAAcC,uBAAY,SAACC,GAC/B,IAAKA,EACH,MAAO,IAGT,IAAMC,EAASP,EAAOQ,MAAK,qBAAGlB,OAAoBgB,CAAvB,IAE3B,OACEC,EACK,cAAC,EAAD,CAAYlB,OAAQkB,IACpB,mCAAGD,GAEX,GAAE,IAEH,OACE,qBACE,UAAQ,SACRpC,UAAWE,IACT,CAAE,yBAA0B+B,IAAeX,IAH/C,UAME,6BACE,cAAC,EAAD,CAAYH,OAAQA,MAEtB,6BAAKE,IACL,6BAAKK,IACL,6BAAKC,IACL,6BAAKO,EAAYL,KACjB,6BAAKK,EAAYN,OAGtB,EClDYW,EAAwB,WACnC,IACMT,EAASC,qBAAWR,GAE1B,OACE,wBACE,UAAQ,cACRvB,UAAU,uDAFZ,UAIE,gCACE,6BATc,CAAC,OAAQ,MAAO,OAAQ,OAAQ,SAAU,UAUzCwC,KAAI,SAAAC,GAAK,OAAI,6BAAiBA,GAARA,EAAb,QAI1B,gCACGX,EAAOU,KAAI,SAACrB,GAAD,OACV,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOG,KAFJ,QASnB,ECtBYoB,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAwBA,OAtBAC,qBAAU,WACRD,GAAmB,GAEnB,IAAME,EAAc,iDAAG,uHAEU5C,IAFV,QAEb6C,EAFa,QAIAC,OACjBR,EAAUO,GAEVL,EAAgB,qCAPC,gDAUnBA,EAAgB,wBAVG,yBAYnBE,GAAmB,GAZA,4EAAH,qDAgBpBE,GACD,GAAE,IAGD,cAAC3B,EAAc8B,SAAf,CAAwBC,MAAOxB,EAA/B,SACE,qCACE,oBAAI9B,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG+C,GAAmB,cAAC,EAAD,IACnBF,GAAgB,cAAC,EAAD,CAAmB7B,QAAS6B,MAC1Cf,EAAOsB,QAAU,cAAC,EAAD,aAM/B,EChDYG,EAAyB,kBACpC,oBAAIvD,UAAU,QAAd,2BADoC,ECOzBwD,G,MAAgB,kBAC3B,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMxD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,SAErC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU5D,GAAG,IAAI8D,SAAO,eAbjC,GCD7BC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.db328213.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  label: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, label }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    ))}\n  >\n    {label}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" label=\"Home\" />\n        <PageNavLink to=\"people\" label=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nexport const ErrorNotification: React.FC<Props> = ({ message }) => (\n  <>\n    {message === 'Something went wrong' ? (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        { message }\n      </p>\n    ) : (\n      <p data-cy=\"noPeopleMessage\">\n        { message }\n      </p>\n    )}\n  </>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { createContext } from 'react';\nimport { Person } from '../types';\n\nexport const PeopleContext = createContext<Person[]>([]);\n","import React, { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { PeopleContext } from '../../context';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const people = useContext(PeopleContext);\n  const { personSlug = '' } = useParams();\n\n  const findParents = useCallback((findedName: string | null) => {\n    if (!findedName) {\n      return '-';\n    }\n\n    const parent = people.find(({ name }) => name === findedName);\n\n    return (\n      parent\n        ? (<PersonLink person={parent} />)\n        : (<>{findedName}</>)\n    );\n  }, []);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': personSlug === slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{findParents(motherName)}</td>\n      <td>{findParents(fatherName)}</td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { PersonItem } from '../Person';\nimport { PeopleContext } from '../../context';\nimport { Person } from '../../types';\n\nexport const PeopleTable: React.FC = () => {\n  const tableTitles = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n  const people = useContext(PeopleContext);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableTitles.map(title => <th key={title}>{title}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person: Person) => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { ErrorNotification } from '../../components/ErrorNotification';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { PeopleContext } from '../../context';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n\n    const getPeopleAsync = async () => {\n      try {\n        const receivedPeople = await getPeople();\n\n        if (receivedPeople.length) {\n          setPeople(receivedPeople);\n        } else {\n          setErrorMessage('There are no people on the server');\n        }\n      } catch {\n        setErrorMessage('Something went wrong');\n      } finally {\n        setIsPeopleLoading(false);\n      }\n    };\n\n    getPeopleAsync();\n  }, []);\n\n  return (\n    <PeopleContext.Provider value={people}>\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isPeopleLoading && <Loader />}\n            {errorMessage && <ErrorNotification message={errorMessage} />}\n            {!!people.length && <PeopleTable />}\n          </div>\n        </div>\n      </>\n    </PeopleContext.Provider>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound/PageNotFound';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}